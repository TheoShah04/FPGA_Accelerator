// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module pixel_pack_pixel_pack_Pipeline_VITIS_LOOP_62_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_24_TVALID,
        stream_out_32_TREADY,
        stream_out_32_TDATA,
        stream_out_32_TVALID,
        stream_out_32_TKEEP,
        stream_out_32_TSTRB,
        stream_out_32_TUSER,
        stream_out_32_TLAST,
        stream_in_24_TDATA,
        stream_in_24_TREADY,
        stream_in_24_TKEEP,
        stream_in_24_TSTRB,
        stream_in_24_TUSER,
        stream_in_24_TLAST
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   stream_in_24_TVALID;
input   stream_out_32_TREADY;
output  [31:0] stream_out_32_TDATA;
output   stream_out_32_TVALID;
output  [3:0] stream_out_32_TKEEP;
output  [3:0] stream_out_32_TSTRB;
output  [0:0] stream_out_32_TUSER;
output  [0:0] stream_out_32_TLAST;
input  [23:0] stream_in_24_TDATA;
output   stream_in_24_TREADY;
input  [2:0] stream_in_24_TKEEP;
input  [2:0] stream_in_24_TSTRB;
input  [0:0] stream_in_24_TUSER;
input  [0:0] stream_in_24_TLAST;

reg ap_idle;
reg stream_out_32_TVALID;
reg stream_in_24_TREADY;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] ap_phi_mux_delayed_last_phi_fu_106_p4;
reg   [0:0] ap_phi_mux_last_4_phi_fu_118_p4;
reg    ap_predicate_op26_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state4;
reg   [0:0] delayed_last_reg_103;
reg   [0:0] last_4_reg_114;
reg   [0:0] in_pixel_last_reg_286;
reg   [0:0] in_pixel_last_1_reg_302;
reg   [0:0] in_pixel_last_2_reg_323;
reg    ap_predicate_op49_read_state4;
reg    ap_predicate_op60_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    stream_out_32_TDATA_blk_n;
reg    stream_in_24_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [0:0] in_pixel_user_4_reg_280;
wire   [0:0] grp_fu_190_p1;
wire   [7:0] trunc_ln72_fu_199_p1;
reg   [7:0] trunc_ln72_reg_290;
wire   [31:0] data_fu_203_p4;
reg   [31:0] data_reg_296;
reg    ap_predicate_op33_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
wire   [0:0] user_2_fu_216_p2;
reg   [0:0] user_2_reg_306;
wire   [7:0] trunc_ln72_1_fu_221_p1;
reg   [7:0] trunc_ln72_1_reg_312;
wire   [31:0] data_1_fu_225_p4;
reg    ap_predicate_op41_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
wire   [0:0] user_3_fu_237_p2;
reg   [0:0] user_3_reg_327;
wire   [7:0] trunc_ln72_2_fu_242_p1;
reg   [7:0] trunc_ln72_2_reg_333;
wire   [31:0] data_2_fu_246_p4;
wire    ap_loop_init;
reg   [0:0] ap_phi_mux_last_6_31180_phi_fu_177_p4;
reg   [31:0] ap_phi_mux_data55_1_3_ph_phi_fu_129_p8;
wire   [31:0] data_3_fu_270_p5;
reg   [31:0] ap_phi_reg_pp0_iter0_data55_1_3_ph_reg_126;
reg   [0:0] ap_phi_mux_user54_1_3_ph_phi_fu_143_p8;
wire   [0:0] user_4_fu_260_p2;
reg   [0:0] ap_phi_reg_pp0_iter0_user54_1_3_ph_reg_140;
reg   [0:0] ap_phi_mux_last_6_3_ph_phi_fu_158_p8;
wire   [31:0] data_fu_203_p1;
wire   [7:0] trunc_ln72_3_fu_266_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_331;
reg    ap_condition_336;
reg    ap_condition_342;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_done_reg = 1'b0;
end

pixel_pack_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0))) begin
        if ((1'b1 == ap_condition_342)) begin
            ap_phi_reg_pp0_iter0_data55_1_3_ph_reg_126 <= data_2_fu_246_p4;
        end else if ((1'b1 == ap_condition_336)) begin
            ap_phi_reg_pp0_iter0_data55_1_3_ph_reg_126 <= data_1_fu_225_p4;
        end else if ((1'b1 == ap_condition_331)) begin
            ap_phi_reg_pp0_iter0_data55_1_3_ph_reg_126 <= data_fu_203_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0))) begin
        if ((1'b1 == ap_condition_342)) begin
            ap_phi_reg_pp0_iter0_user54_1_3_ph_reg_140 <= user_3_fu_237_p2;
        end else if ((1'b1 == ap_condition_336)) begin
            ap_phi_reg_pp0_iter0_user54_1_3_ph_reg_140 <= user_2_reg_306;
        end else if ((1'b1 == ap_condition_331)) begin
            ap_phi_reg_pp0_iter0_user54_1_3_ph_reg_140 <= in_pixel_user_4_reg_280;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        delayed_last_reg_103 <= 1'd0;
    end else if (((delayed_last_reg_103 == 1'd0) & (1'b0 == ap_block_state4_pp0_stage3_iter0) & (1'b1 == ap_CS_fsm_state4))) begin
        delayed_last_reg_103 <= last_4_reg_114;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        last_4_reg_114 <= 1'd0;
    end else if (((delayed_last_reg_103 == 1'd0) & (1'b0 == ap_block_state4_pp0_stage3_iter0) & (1'b1 == ap_CS_fsm_state4))) begin
        last_4_reg_114 <= ap_phi_mux_last_6_31180_phi_fu_177_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state2_pp0_stage1_iter0) & (1'b1 == ap_CS_fsm_state2))) begin
        data_reg_296 <= data_fu_203_p4;
        in_pixel_last_1_reg_302 <= stream_in_24_TLAST;
        trunc_ln72_1_reg_312 <= trunc_ln72_1_fu_221_p1;
        user_2_reg_306 <= user_2_fu_216_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_pp0_stage2_iter0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_pixel_last_2_reg_323 <= stream_in_24_TLAST;
        trunc_ln72_2_reg_333 <= trunc_ln72_2_fu_242_p1;
        user_3_reg_327 <= user_3_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        in_pixel_last_reg_286 <= stream_in_24_TLAST;
        in_pixel_user_4_reg_280 <= stream_in_24_TUSER;
        trunc_ln72_reg_290 <= trunc_ln72_fu_199_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_pp0_stage1_iter0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state3_pp0_stage2_iter0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state4_pp0_stage3_iter0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (ap_phi_mux_delayed_last_phi_fu_106_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((in_pixel_last_2_reg_323 == 1'd0) & (in_pixel_last_1_reg_302 == 1'd0) & (in_pixel_last_reg_286 == 1'd0) & (last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0))) begin
        ap_phi_mux_data55_1_3_ph_phi_fu_129_p8 = data_3_fu_270_p5;
    end else begin
        ap_phi_mux_data55_1_3_ph_phi_fu_129_p8 = ap_phi_reg_pp0_iter0_data55_1_3_ph_reg_126;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_delayed_last_phi_fu_106_p4 = 1'd0;
    end else begin
        ap_phi_mux_delayed_last_phi_fu_106_p4 = delayed_last_reg_103;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_last_4_phi_fu_118_p4 = 1'd0;
    end else begin
        ap_phi_mux_last_4_phi_fu_118_p4 = last_4_reg_114;
    end
end

always @ (*) begin
    if (((last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0))) begin
        ap_phi_mux_last_6_31180_phi_fu_177_p4 = ap_phi_mux_last_6_3_ph_phi_fu_158_p8;
    end else begin
        ap_phi_mux_last_6_31180_phi_fu_177_p4 = 1'd1;
    end
end

always @ (*) begin
    if (((in_pixel_last_2_reg_323 == 1'd0) & (in_pixel_last_1_reg_302 == 1'd0) & (in_pixel_last_reg_286 == 1'd0) & (last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0))) begin
        ap_phi_mux_last_6_3_ph_phi_fu_158_p8 = stream_in_24_TLAST;
    end else begin
        ap_phi_mux_last_6_3_ph_phi_fu_158_p8 = 1'd1;
    end
end

always @ (*) begin
    if (((in_pixel_last_2_reg_323 == 1'd0) & (in_pixel_last_1_reg_302 == 1'd0) & (in_pixel_last_reg_286 == 1'd0) & (last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0))) begin
        ap_phi_mux_user54_1_3_ph_phi_fu_143_p8 = user_4_fu_260_p2;
    end else begin
        ap_phi_mux_user54_1_3_ph_phi_fu_143_p8 = ap_phi_reg_pp0_iter0_user54_1_3_ph_reg_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_pp0_stage3_iter0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op49_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_pixel_last_1_reg_302 == 1'd0) & (in_pixel_last_reg_286 == 1'd0) & (last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((in_pixel_last_reg_286 == 1'd0) & (last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_predicate_op26_read_state1 == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        stream_in_24_TDATA_blk_n = stream_in_24_TVALID;
    end else begin
        stream_in_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op49_read_state4 == 1'b1) & (1'b0 == ap_block_state4_pp0_stage3_iter0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b0 == ap_block_state1_pp0_stage0_iter0) & (ap_predicate_op26_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state3_pp0_stage2_iter0) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op41_read_state3 == 1'b1)) | ((1'b0 == ap_block_state2_pp0_stage1_iter0) & (1'b1 == ap_CS_fsm_state2) & (ap_predicate_op33_read_state2 == 1'b1)))) begin
        stream_in_24_TREADY = 1'b1;
    end else begin
        stream_in_24_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op60_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        stream_out_32_TDATA_blk_n = stream_out_32_TREADY;
    end else begin
        stream_out_32_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op60_write_state4 == 1'b1) & (1'b0 == ap_block_state4_pp0_stage3_iter0) & (1'b1 == ap_CS_fsm_state4))) begin
        stream_out_32_TVALID = 1'b1;
    end else begin
        stream_out_32_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (ap_phi_mux_delayed_last_phi_fu_106_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_pp0_stage1_iter0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_pp0_stage2_iter0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_pp0_stage3_iter0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((ap_predicate_op26_read_state1 == 1'b1) & (stream_in_24_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((stream_in_24_TVALID == 1'b0) & (ap_predicate_op33_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((stream_in_24_TVALID == 1'b0) & (ap_predicate_op41_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((ap_predicate_op60_write_state4 == 1'b1) & (stream_out_32_TREADY == 1'b0)) | ((ap_predicate_op49_read_state4 == 1'b1) & (stream_in_24_TVALID == 1'b0)));
end

always @ (*) begin
    ap_condition_331 = ((in_pixel_last_reg_286 == 1'd1) & (1'b0 == ap_block_state2_pp0_stage1_iter0) & (1'b1 == ap_CS_fsm_state2));
end

always @ (*) begin
    ap_condition_336 = ((in_pixel_last_1_reg_302 == 1'd1) & (in_pixel_last_reg_286 == 1'd0) & (1'b0 == ap_block_state3_pp0_stage2_iter0) & (1'b1 == ap_CS_fsm_state3));
end

always @ (*) begin
    ap_condition_342 = ((in_pixel_last_1_reg_302 == 1'd0) & (in_pixel_last_reg_286 == 1'd0) & (1'b0 == ap_block_state3_pp0_stage2_iter0) & (1'b1 == ap_CS_fsm_state3) & (grp_fu_190_p1 == 1'd1));
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op26_read_state1 = ((ap_phi_mux_last_4_phi_fu_118_p4 == 1'd0) & (ap_phi_mux_delayed_last_phi_fu_106_p4 == 1'd0));
end

always @ (*) begin
    ap_predicate_op33_read_state2 = ((in_pixel_last_reg_286 == 1'd0) & (last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0));
end

always @ (*) begin
    ap_predicate_op41_read_state3 = ((in_pixel_last_1_reg_302 == 1'd0) & (in_pixel_last_reg_286 == 1'd0) & (last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0));
end

always @ (*) begin
    ap_predicate_op49_read_state4 = ((in_pixel_last_2_reg_323 == 1'd0) & (in_pixel_last_1_reg_302 == 1'd0) & (in_pixel_last_reg_286 == 1'd0) & (last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0));
end

always @ (*) begin
    ap_predicate_op60_write_state4 = ((last_4_reg_114 == 1'd0) & (delayed_last_reg_103 == 1'd0));
end

assign ap_ready = ap_ready_sig;

assign data_1_fu_225_p4 = {{data_reg_296[31:16]}, {trunc_ln72_1_reg_312}, {data_reg_296[7:0]}};

assign data_2_fu_246_p4 = {{data_1_fu_225_p4[31:24]}, {trunc_ln72_2_fu_242_p1}, {data_1_fu_225_p4[15:0]}};

assign data_3_fu_270_p5 = {{{{trunc_ln72_3_fu_266_p1}, {trunc_ln72_2_reg_333}}, {trunc_ln72_1_reg_312}}, {trunc_ln72_reg_290}};

assign data_fu_203_p1 = 'bx;

assign data_fu_203_p4 = {{data_fu_203_p1[31:8]}, {trunc_ln72_reg_290}};

assign grp_fu_190_p1 = stream_in_24_TLAST;

assign stream_out_32_TDATA = ap_phi_mux_data55_1_3_ph_phi_fu_129_p8;

assign stream_out_32_TKEEP = 'bx;

assign stream_out_32_TLAST = ap_phi_mux_last_6_3_ph_phi_fu_158_p8;

assign stream_out_32_TSTRB = 'bx;

assign stream_out_32_TUSER = ap_phi_mux_user54_1_3_ph_phi_fu_143_p8;

assign trunc_ln72_1_fu_221_p1 = stream_in_24_TDATA[7:0];

assign trunc_ln72_2_fu_242_p1 = stream_in_24_TDATA[7:0];

assign trunc_ln72_3_fu_266_p1 = stream_in_24_TDATA[7:0];

assign trunc_ln72_fu_199_p1 = stream_in_24_TDATA[7:0];

assign user_2_fu_216_p2 = (stream_in_24_TUSER | in_pixel_user_4_reg_280);

assign user_3_fu_237_p2 = (user_2_reg_306 | stream_in_24_TUSER);

assign user_4_fu_260_p2 = (user_3_reg_327 | stream_in_24_TUSER);

endmodule //pixel_pack_pixel_pack_Pipeline_VITIS_LOOP_62_5
